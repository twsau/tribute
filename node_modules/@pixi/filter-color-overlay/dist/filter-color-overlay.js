/*!
 * @pixi/filter-color-overlay - v3.1.0
 * Compiled Wed, 11 Mar 2020 20:38:18 UTC
 *
 * @pixi/filter-color-overlay is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
var __filters=function(r,o,e){"use strict";var t="attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\n\nuniform mat3 projectionMatrix;\n\nvarying vec2 vTextureCoord;\n\nvoid main(void)\n{\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\n    vTextureCoord = aTextureCoord;\n}",n="varying vec2 vTextureCoord;\nuniform sampler2D uSampler;\nuniform vec3 color;\nvoid main(void) {\n    vec4 currentColor = texture2D(uSampler, vTextureCoord);\n    vec3 colorOverlay = color * currentColor.a;\n    gl_FragColor = vec4(colorOverlay.r, colorOverlay.g, colorOverlay.b, currentColor.a);\n}\n",i=function(r){function o(o){void 0===o&&(o=0),r.call(this,t,n),this.uniforms.color=new Float32Array(3),this.color=o}r&&(o.__proto__=r),o.prototype=Object.create(r&&r.prototype),o.prototype.constructor=o;var i={color:{configurable:!0}};return i.color.set=function(r){var o=this.uniforms.color;"number"==typeof r?(e.hex2rgb(r,o),this._color=r):(o[0]=r[0],o[1]=r[1],o[2]=r[2],this._color=e.rgb2hex(o))},i.color.get=function(){return this._color},Object.defineProperties(o.prototype,i),o}(o.Filter);return r.ColorOverlayFilter=i,r}({},PIXI,PIXI.utils);Object.assign(PIXI.filters,__filters);
//# sourceMappingURL=filter-color-overlay.js.map
