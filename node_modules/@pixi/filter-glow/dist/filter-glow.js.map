{"version":3,"file":"filter-glow.js","sources":["../src/GlowFilter.js"],"sourcesContent":["import {vertex} from '@tools/fragments';\nimport fragment from './glow.frag';\nimport {Filter} from '@pixi/core';\nimport {rgb2hex, hex2rgb} from '@pixi/utils';\n\n/**\n * GlowFilter, originally by mishaa\n * [codepen]{@link http://codepen.io/mishaa/pen/raKzrm}.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/glow.png)\n * @class\n *\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-glow|@pixi/filter-glow}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {number} [options] Options for glow.\n * @param {number} [options.distance=10] The distance of the glow. Make it 2 times more for resolution=2.\n *        It can't be changed after filter creation.\n * @param {number} [options.outerStrength=4] The strength of the glow outward from the edge of the sprite.\n * @param {number} [options.innerStrength=0] The strength of the glow inward from the edge of the sprite.\n * @param {number} [options.color=0xffffff] The color of the glow.\n * @param {number} [options.quality=0.1] A number between 0 and 1 that describes the quality of the glow.\n *        The higher the number the less performant.\n * @param {boolean} [options.knockout=false] Toggle to hide the contents and only show glow.\n *\n * @example\n *  someSprite.filters = [\n *      new GlowFilter({ distance: 15, outerStrength: 2 })\n *  ];\n */\nclass GlowFilter extends Filter {\n\n    constructor(options) {\n        let {\n            distance,\n            outerStrength,\n            innerStrength,\n            color,\n            knockout,\n            quality } = Object.assign({}, GlowFilter.defaults, options);\n\n        distance = Math.round(distance);\n\n        super(vertex, fragment\n            .replace(/__ANGLE_STEP_SIZE__/gi, '' + (1 / quality / distance).toFixed(7))\n            .replace(/__DIST__/gi, distance.toFixed(0) + '.0'));\n\n        this.uniforms.glowColor = new Float32Array([0, 0, 0, 1]);\n\n        Object.assign(this, {\n            color,\n            outerStrength,\n            innerStrength,\n            padding: distance,\n            knockout,\n        });\n    }\n\n    /**\n     * The color of the glow.\n     * @member {number}\n     * @default 0xFFFFFF\n     */\n    get color() {\n        return rgb2hex(this.uniforms.glowColor);\n    }\n    set color(value) {\n        hex2rgb(value, this.uniforms.glowColor);\n    }\n\n    /**\n     * The strength of the glow outward from the edge of the sprite.\n     * @member {number}\n     * @default 4\n     */\n    get outerStrength() {\n        return this.uniforms.outerStrength;\n    }\n    set outerStrength(value) {\n        this.uniforms.outerStrength = value;\n    }\n\n    /**\n     * The strength of the glow inward from the edge of the sprite.\n     * @member {number}\n     * @default 0\n     */\n    get innerStrength() {\n        return this.uniforms.innerStrength;\n    }\n    set innerStrength(value) {\n        this.uniforms.innerStrength = value;\n    }\n\n    /**\n     * Only draw the glow, not the texture itself\n     * @member {boolean}\n     * @default false\n     */\n    get knockout() {\n        return this.uniforms.knockout;\n    }\n    set knockout(value) {\n        this.uniforms.knockout = value;\n    }\n}\n\nGlowFilter.defaults = {\n    distance: 10,\n    outerStrength: 4,\n    innerStrength: 0,\n    color: 0xffffff,\n    quality: 0.1,\n    knockout: false,\n};\n\nexport { GlowFilter };\n"],"names":["GlowFilter","options","Object","assign","defaults","distance","Math","round","super","vertex","fragment","replace","quality","toFixed","this","uniforms","glowColor","Float32Array","color","outerStrength","innerStrength","padding","knockout","prototypeAccessors","rgb2hex","value","hex2rgb","Filter"],"mappings":";;;;;;;+vEA8BMA,cAEF,WAAYC,GACR,MAMgBC,OAAOC,OAAO,GAAIH,EAAWI,SAAUH,uFAEvDI,EAAWC,KAAKC,MAAMF,GAEtBG,YAAMC,EAAQC,EACTC,QAAQ,wBAAyB,IAAM,EAAIC,EAAUP,GAAUQ,QAAQ,IACvEF,QAAQ,aAAcN,EAASQ,QAAQ,GAAK,OAEjDC,KAAKC,SAASC,UAAY,IAAIC,aAAa,CAAC,EAAG,EAAG,EAAG,IAErDf,OAAOC,OAAOW,KAAM,OAChBI,gBACAC,gBACAC,EACAC,QAAShB,WACTiB,6NASRC,EAAIL,qBACA,OAAOM,UAAQV,KAAKC,SAASC,YAEjCO,EAAIL,mBAAMO,GACNC,UAAQD,EAAOX,KAAKC,SAASC,YAQjCO,EAAIJ,6BACA,OAAOL,KAAKC,SAASI,eAEzBI,EAAIJ,2BAAcM,GACdX,KAAKC,SAASI,cAAgBM,GAQlCF,EAAIH,6BACA,OAAON,KAAKC,SAASK,eAEzBG,EAAIH,2BAAcK,GACdX,KAAKC,SAASK,cAAgBK,GAQlCF,EAAID,wBACA,OAAOR,KAAKC,SAASO,UAEzBC,EAAID,sBAASG,GACTX,KAAKC,SAASO,SAAWG,6CAzERE,iBA6EzB3B,EAAWI,SAAW,CAClBC,SAAU,GACVc,cAAe,EACfC,cAAe,EACfF,MAAO,SACPN,QAAS,GACTU,UAAU"}